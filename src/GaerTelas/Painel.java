/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GaerTelas;

import GaerPrincipal.Animal;
import GaerPrincipal.Vacina;

import GaerSQL.AnimalDAO;
import GaerSQL.VacinaDAO;

import java.awt.CardLayout;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

/**
 *
 * @author jricm
 */
public class Painel extends javax.swing.JFrame {

    private final AnimalDAO animal;
    private final VacinaDAO vacina;

    public Painel() {
        animal = new AnimalDAO();
        vacina = new VacinaDAO();
        initComponents();
        this.setLocationRelativeTo(null);
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Root = new javax.swing.JPanel();
        Inicio = new javax.swing.JPanel();
        txtGaerInicio = new javax.swing.JLabel();
        txtGaerInicioDef = new javax.swing.JLabel();
        cadastroVacina = new javax.swing.JPanel();
        campoDescricaoVacina = new javax.swing.JTextField();
        campoQuantidadeAtual = new javax.swing.JTextField();
        campoQuantidadeMinima = new javax.swing.JTextField();
        campoLote = new javax.swing.JTextField();
        campoCusto = new javax.swing.JTextField();
        campoFabricante = new javax.swing.JTextField();
        txtDescricaoVacina = new javax.swing.JLabel();
        txtQuantidadeAtual = new javax.swing.JLabel();
        txtQuantidadeMinima = new javax.swing.JLabel();
        txtObservacaoVacina = new javax.swing.JLabel();
        txtValidade = new javax.swing.JLabel();
        txtLote = new javax.swing.JLabel();
        txtCusto = new javax.swing.JLabel();
        txtFabricante = new javax.swing.JLabel();
        botaoGravarVacina = new javax.swing.JButton();
        botaoCancelarVacina = new javax.swing.JButton();
        campoValidade = new javax.swing.JFormattedTextField();
        txtExValidade = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        campoObservacaoVacina = new javax.swing.JTextArea();
        cadastroAnimal = new javax.swing.JPanel();
        campoNumeroBrinco = new javax.swing.JTextField();
        txtBrincoAnimal = new javax.swing.JLabel();
        txtDataNascimento = new javax.swing.JLabel();
        campoFazendaOrigem = new javax.swing.JTextField();
        txtFazendaOrigem = new javax.swing.JLabel();
        campoSexo = new javax.swing.JTextField();
        txtSexo = new javax.swing.JLabel();
        campoRaca = new javax.swing.JTextField();
        txtRaca = new javax.swing.JLabel();
        botaoGravarAnimal = new javax.swing.JButton();
        botaoCancelarAnimal = new javax.swing.JButton();
        txtDescricao = new javax.swing.JLabel();
        campoDataNascimento = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoDescricao = new javax.swing.JTextArea();
        barraPrincipal = new javax.swing.JMenuBar();
        menuInicio = new javax.swing.JMenu();
        menuCadastros = new javax.swing.JMenu();
        menuCadAnimal = new javax.swing.JMenuItem();
        menuCadVacina = new javax.swing.JMenuItem();
        menuVacinacao = new javax.swing.JMenu();
        inserirVacinacao = new javax.swing.JMenuItem();
        menuRelatorios = new javax.swing.JMenu();
        menuConVacinas = new javax.swing.JMenuItem();
        menuConAnimais = new javax.swing.JMenuItem();
        menuConVacinacao = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GAER - Inicio");

        Root.setLayout(new java.awt.CardLayout());

        txtGaerInicio.setFont(new java.awt.Font("Adobe Arabic", 1, 24)); // NOI18N
        txtGaerInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GaerTelas/imgLogo.png"))); // NOI18N
        txtGaerInicio.setText("GAER");

        txtGaerInicioDef.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        txtGaerInicioDef.setText("  CONTROLE DE VACINAÇÃO");

        javax.swing.GroupLayout InicioLayout = new javax.swing.GroupLayout(Inicio);
        Inicio.setLayout(InicioLayout);
        InicioLayout.setHorizontalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(InicioLayout.createSequentialGroup()
                .addContainerGap(394, Short.MAX_VALUE)
                .addGroup(InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtGaerInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtGaerInicioDef, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        InicioLayout.setVerticalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InicioLayout.createSequentialGroup()
                .addContainerGap(249, Short.MAX_VALUE)
                .addComponent(txtGaerInicio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGaerInicioDef)
                .addContainerGap())
        );

        Root.add(Inicio, "inicio");

        campoDescricaoVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDescricaoVacinaActionPerformed(evt);
            }
        });

        txtDescricaoVacina.setText("Descrição");

        txtQuantidadeAtual.setText("Quantidade Atual");

        txtQuantidadeMinima.setText("Quantidade Minima");

        txtObservacaoVacina.setText("Observação");

        txtValidade.setText("Validade");

        txtLote.setText("Lote");

        txtCusto.setText("Custo");

        txtFabricante.setText("Fabricante");

        botaoGravarVacina.setText("Gravar");
        botaoGravarVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoGravarVacinaActionPerformed(evt);
            }
        });

        botaoCancelarVacina.setText("Cancelar");
        botaoCancelarVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarVacinaActionPerformed(evt);
            }
        });

        try {
            campoValidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        txtExValidade.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        txtExValidade.setText("(AAAA/MM/DD)");

        campoObservacaoVacina.setColumns(20);
        campoObservacaoVacina.setRows(5);
        jScrollPane2.setViewportView(campoObservacaoVacina);

        javax.swing.GroupLayout cadastroVacinaLayout = new javax.swing.GroupLayout(cadastroVacina);
        cadastroVacina.setLayout(cadastroVacinaLayout);
        cadastroVacinaLayout.setHorizontalGroup(
            cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastroVacinaLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastroVacinaLayout.createSequentialGroup()
                        .addComponent(campoQuantidadeAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQuantidadeMinima)
                            .addComponent(campoQuantidadeMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastroVacinaLayout.createSequentialGroup()
                        .addComponent(campoValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                        .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLote)
                            .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(campoLote, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoCancelarVacina, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addGroup(cadastroVacinaLayout.createSequentialGroup()
                        .addComponent(txtValidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtExValidade))
                    .addComponent(txtObservacaoVacina)
                    .addComponent(txtQuantidadeAtual)
                    .addComponent(txtDescricaoVacina)
                    .addComponent(botaoGravarVacina, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDescricaoVacina)
                    .addGroup(cadastroVacinaLayout.createSequentialGroup()
                        .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCusto))
                        .addGap(18, 18, 18)
                        .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFabricante)
                            .addComponent(campoFabricante))))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        cadastroVacinaLayout.setVerticalGroup(
            cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastroVacinaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtDescricaoVacina)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoDescricaoVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantidadeAtual)
                    .addComponent(txtQuantidadeMinima))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoQuantidadeAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoQuantidadeMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtObservacaoVacina)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValidade)
                    .addComponent(txtLote)
                    .addComponent(txtExValidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCusto)
                    .addComponent(txtFabricante))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cadastroVacinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoGravarVacina)
                    .addComponent(botaoCancelarVacina))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        Root.add(cadastroVacina, "cadastroVacina");

        campoNumeroBrinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNumeroBrincoActionPerformed(evt);
            }
        });

        txtBrincoAnimal.setText("Numero Brinco");

        txtDataNascimento.setText("Data Nascimento");

        txtFazendaOrigem.setText("Fazenda Origem");

        campoSexo.setToolTipText("");

        txtSexo.setText("Sexo");

        campoRaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoRacaActionPerformed(evt);
            }
        });

        txtRaca.setText("Raça");

        botaoGravarAnimal.setText("Gravar");
        botaoGravarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoGravarAnimalActionPerformed(evt);
            }
        });

        botaoCancelarAnimal.setText("Cancelar");
        botaoCancelarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarAnimalActionPerformed(evt);
            }
        });

        txtDescricao.setText("Descrição");

        try {
            campoDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDataNascimento.setToolTipText("");
        campoDataNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDataNascimentoActionPerformed(evt);
            }
        });

        campoDescricao.setColumns(20);
        campoDescricao.setRows(5);
        jScrollPane1.setViewportView(campoDescricao);

        javax.swing.GroupLayout cadastroAnimalLayout = new javax.swing.GroupLayout(cadastroAnimal);
        cadastroAnimal.setLayout(cadastroAnimalLayout);
        cadastroAnimalLayout.setHorizontalGroup(
            cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastroAnimalLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cadastroAnimalLayout.createSequentialGroup()
                        .addComponent(txtFazendaOrigem)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(cadastroAnimalLayout.createSequentialGroup()
                        .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSexo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(txtRaca)
                        .addContainerGap(255, Short.MAX_VALUE))
                    .addGroup(cadastroAnimalLayout.createSequentialGroup()
                        .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(cadastroAnimalLayout.createSequentialGroup()
                                .addComponent(botaoGravarAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botaoCancelarAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(campoRaca, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cadastroAnimalLayout.createSequentialGroup()
                                .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBrincoAnimal)
                                    .addComponent(campoNumeroBrinco, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(cadastroAnimalLayout.createSequentialGroup()
                                        .addGap(130, 130, 130)
                                        .addComponent(txtDataNascimento))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cadastroAnimalLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(campoFazendaOrigem, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(119, Short.MAX_VALUE))))
        );
        cadastroAnimalLayout.setVerticalGroup(
            cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastroAnimalLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBrincoAnimal)
                    .addComponent(txtDataNascimento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNumeroBrinco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(txtFazendaOrigem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoFazendaOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescricao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSexo)
                    .addComponent(txtRaca))
                .addGap(5, 5, 5)
                .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoRaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(cadastroAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCancelarAnimal)
                    .addComponent(botaoGravarAnimal))
                .addGap(27, 27, 27))
        );

        Root.add(cadastroAnimal, "cadastroAnimal");

        menuInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GaerTelas/imgBotaoInicio.png"))); // NOI18N
        menuInicio.setText("Inicio");
        menuInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuInicioMouseClicked(evt);
            }
        });
        menuInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInicioActionPerformed(evt);
            }
        });
        barraPrincipal.add(menuInicio);

        menuCadastros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GaerTelas/imgBotaoCadastro.png"))); // NOI18N
        menuCadastros.setText("Cadastros");

        menuCadAnimal.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuCadAnimal.setText("Animal");
        menuCadAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCadAnimalActionPerformed(evt);
            }
        });
        menuCadastros.add(menuCadAnimal);

        menuCadVacina.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        menuCadVacina.setText("Vacina");
        menuCadVacina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCadVacinaActionPerformed(evt);
            }
        });
        menuCadastros.add(menuCadVacina);

        barraPrincipal.add(menuCadastros);

        menuVacinacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GaerTelas/imgBotaoVacinacao.png"))); // NOI18N
        menuVacinacao.setText("Vacinação");

        inserirVacinacao.setText("Inserir Vacinação");
        inserirVacinacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirVacinacaoActionPerformed(evt);
            }
        });
        menuVacinacao.add(inserirVacinacao);

        barraPrincipal.add(menuVacinacao);

        menuRelatorios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GaerTelas/imgRelatorios.png"))); // NOI18N
        menuRelatorios.setText("Relatórios");

        menuConVacinas.setText("Vacinas Cadastradas");
        menuConVacinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConVacinasActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuConVacinas);

        menuConAnimais.setText("Animais Cadastrados");
        menuConAnimais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConAnimaisActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuConAnimais);

        menuConVacinacao.setText("Animais/Vacinas Aplicadas");
        menuConVacinacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConVacinacaoActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuConVacinacao);

        barraPrincipal.add(menuRelatorios);

        setJMenuBar(barraPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Root, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Root, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuCadAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCadAnimalActionPerformed
        CardLayout card = (CardLayout) Root.getLayout();
        card.show(Root, "cadastroAnimal");
    }//GEN-LAST:event_menuCadAnimalActionPerformed

    private void menuCadVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCadVacinaActionPerformed
        CardLayout card = (CardLayout) Root.getLayout();
        card.show(Root, "cadastroVacina");
    }//GEN-LAST:event_menuCadVacinaActionPerformed

    private void campoDescricaoVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDescricaoVacinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDescricaoVacinaActionPerformed

    private void botaoGravarVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoGravarVacinaActionPerformed
        // TODO add your handling code here:
        try {
            if (campoDescricaoVacina.getText().isEmpty()
                    || campoQuantidadeAtual.getText().isEmpty()
                    || campoQuantidadeMinima.getText().isEmpty()
                    || campoObservacaoVacina.getText().isEmpty()
                    || campoValidade.getText().isEmpty()
                    || campoLote.getText().isEmpty()
                    || campoCusto.getText().isEmpty()
                    || campoFabricante.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Preencha todos os campos!");
            } else {
                Vacina v = new Vacina(
                        campoDescricaoVacina.getText(),
                        Integer.parseInt(campoQuantidadeAtual.getText()),
                        Integer.parseInt(campoQuantidadeMinima.getText()),
                        campoObservacaoVacina.getText(),
                        campoValidade.getText(),
                        campoLote.getText(),
                        Integer.parseInt(campoCusto.getText()),
                        campoFabricante.getText());
                //vacina.inserirVacina(v);

                if (vacina.inserirVacina(v)) {
                    JOptionPane.showMessageDialog(null, "Vacina inserida com sucesso!");
                    campoDescricaoVacina.setText("");
                    campoQuantidadeAtual.setText("");
                    campoQuantidadeMinima.setText("");
                    campoObservacaoVacina.setText("");
                    campoValidade.setText("");
                    campoLote.setText("");
                    campoCusto.setText("");
                    campoFabricante.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "Vacina não inserida. Verifique os valores preenchidos.");
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Dados preenchidos incorretamente!");
        }
    }//GEN-LAST:event_botaoGravarVacinaActionPerformed

    private void botaoCancelarVacinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarVacinaActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja fechar?", "Fechar", JOptionPane.YES_NO_OPTION);
        if (resposta == 0) {
            campoDescricaoVacina.setText("");
            campoQuantidadeAtual.setText("");
            campoQuantidadeMinima.setText("");
            campoObservacaoVacina.setText("");
            campoValidade.setText("");
            campoLote.setText("");
            campoCusto.setText("");
            campoFabricante.setText("");
            CardLayout card = (CardLayout) Root.getLayout();
            card.show(Root, "inicio");
        } else {
        }
    }//GEN-LAST:event_botaoCancelarVacinaActionPerformed

    private void botaoCancelarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarAnimalActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja fechar?", "Fechar", JOptionPane.YES_NO_OPTION);
        if (resposta == 0) {
            campoNumeroBrinco.setText("");
            campoDataNascimento.setText("");
            campoFazendaOrigem.setText("");
            campoDescricao.setText("");
            campoSexo.setText("");
            campoRaca.setText("");
            CardLayout card = (CardLayout) Root.getLayout();
            card.show(Root, "inicio");
        } else {
        }
    }//GEN-LAST:event_botaoCancelarAnimalActionPerformed

    private void botaoGravarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoGravarAnimalActionPerformed
        // TODO add your handling code here:
        try {
            if (campoNumeroBrinco.getText().isEmpty()
                    || campoFazendaOrigem.getText().isEmpty()
                    || campoDataNascimento.getText().isEmpty()
                    || campoDescricao.getText().isEmpty()
                    || campoSexo.getText().isEmpty()
                    || campoRaca.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Preencha todos os campos!");
            } else {
                Animal a = new Animal(
                        Integer.parseInt(campoNumeroBrinco.getText()),
                        campoFazendaOrigem.getText(),
                        campoDataNascimento.getText(),
                        campoDescricao.getText(),
                        campoSexo.getText(),
                        campoRaca.getText());
                //animal.inserirAnimal(a);

                if (animal.inserirAnimal(a)) {
                    JOptionPane.showMessageDialog(null, "Animal inserido com sucesso!");
                    campoNumeroBrinco.setText("");
                    campoDataNascimento.setText("");
                    campoFazendaOrigem.setText("");
                    campoDescricao.setText("");
                    campoSexo.setText("");
                    campoRaca.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "Animal não inserido. Verifique os valores preenchidos.");
                }
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Número do Brinco deve conter somente Números!");
        }
    }//GEN-LAST:event_botaoGravarAnimalActionPerformed

    private void campoRacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoRacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoRacaActionPerformed

    private void campoNumeroBrincoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNumeroBrincoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNumeroBrincoActionPerformed

    private void menuConAnimaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConAnimaisActionPerformed
        ConsultaAnimal conAnimaisCadastradas = new ConsultaAnimal();
        conAnimaisCadastradas.setVisible(true);
        dispose();
    }//GEN-LAST:event_menuConAnimaisActionPerformed

    private void menuConVacinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConVacinasActionPerformed
        ConsultaVacina conVacinasCadastradas = new ConsultaVacina();
        conVacinasCadastradas.setVisible(true);
        dispose();
    }//GEN-LAST:event_menuConVacinasActionPerformed

    private void inserirVacinacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirVacinacaoActionPerformed
        InsereVacinacao vacinacao = new InsereVacinacao();
        vacinacao.setVisible(true);
        dispose();
    }//GEN-LAST:event_inserirVacinacaoActionPerformed

    private void menuConVacinacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConVacinacaoActionPerformed
        ConsultaVacinacao ConsultaVacinacao = new ConsultaVacinacao();
        ConsultaVacinacao.setVisible(true);
        dispose();
    }//GEN-LAST:event_menuConVacinacaoActionPerformed

    private void menuInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInicioActionPerformed

    }//GEN-LAST:event_menuInicioActionPerformed

    private void menuInicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuInicioMouseClicked
        int resposta = JOptionPane.showConfirmDialog(null, "Voltar ao Inicio?", "Fechar", JOptionPane.YES_NO_OPTION);
        if (resposta == 0) {
            Painel inicio = new Painel();
            inicio.setVisible(true);
            dispose();
        } else {

        }
    }//GEN-LAST:event_menuInicioMouseClicked

    private void campoDataNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDataNascimentoActionPerformed
  
    }//GEN-LAST:event_campoDataNascimentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Painel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Painel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inicio;
    private javax.swing.JPanel Root;
    private javax.swing.JMenuBar barraPrincipal;
    private javax.swing.JButton botaoCancelarAnimal;
    private javax.swing.JButton botaoCancelarVacina;
    private javax.swing.JButton botaoGravarAnimal;
    private javax.swing.JButton botaoGravarVacina;
    private javax.swing.JPanel cadastroAnimal;
    private javax.swing.JPanel cadastroVacina;
    private javax.swing.JTextField campoCusto;
    private javax.swing.JFormattedTextField campoDataNascimento;
    private javax.swing.JTextArea campoDescricao;
    private javax.swing.JTextField campoDescricaoVacina;
    private javax.swing.JTextField campoFabricante;
    private javax.swing.JTextField campoFazendaOrigem;
    private javax.swing.JTextField campoLote;
    private javax.swing.JTextField campoNumeroBrinco;
    private javax.swing.JTextArea campoObservacaoVacina;
    private javax.swing.JTextField campoQuantidadeAtual;
    private javax.swing.JTextField campoQuantidadeMinima;
    private javax.swing.JTextField campoRaca;
    private javax.swing.JTextField campoSexo;
    private javax.swing.JFormattedTextField campoValidade;
    private javax.swing.JMenuItem inserirVacinacao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem menuCadAnimal;
    private javax.swing.JMenuItem menuCadVacina;
    private javax.swing.JMenu menuCadastros;
    private javax.swing.JMenuItem menuConAnimais;
    private javax.swing.JMenuItem menuConVacinacao;
    private javax.swing.JMenuItem menuConVacinas;
    private javax.swing.JMenu menuInicio;
    private javax.swing.JMenu menuRelatorios;
    private javax.swing.JMenu menuVacinacao;
    private javax.swing.JLabel txtBrincoAnimal;
    private javax.swing.JLabel txtCusto;
    private javax.swing.JLabel txtDataNascimento;
    private javax.swing.JLabel txtDescricao;
    private javax.swing.JLabel txtDescricaoVacina;
    private javax.swing.JLabel txtExValidade;
    private javax.swing.JLabel txtFabricante;
    private javax.swing.JLabel txtFazendaOrigem;
    private javax.swing.JLabel txtGaerInicio;
    private javax.swing.JLabel txtGaerInicioDef;
    private javax.swing.JLabel txtLote;
    private javax.swing.JLabel txtObservacaoVacina;
    private javax.swing.JLabel txtQuantidadeAtual;
    private javax.swing.JLabel txtQuantidadeMinima;
    private javax.swing.JLabel txtRaca;
    private javax.swing.JLabel txtSexo;
    private javax.swing.JLabel txtValidade;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("imgLogo.png")));
    }
}
